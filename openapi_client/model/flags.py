"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
    OpenApiModel
)
from openapi_client.exceptions import ApiAttributeError



class Flags(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
    }

    @cached_property
    def additional_properties_type():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded
        """
        return (bool, date, datetime, dict, float, int, list, str, none_type,)  # noqa: E501

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        return {
            'f': (bool,),  # noqa: E501
            'update_all_extensions': (bool,),  # noqa: E501
            'skip_python_version_check': (bool,),  # noqa: E501
            'skip_torch_cuda_test': (bool,),  # noqa: E501
            'reinstall_xformers': (bool,),  # noqa: E501
            'reinstall_torch': (bool,),  # noqa: E501
            'update_check': (bool,),  # noqa: E501
            'tests': (str,),  # noqa: E501
            'no_tests': (bool,),  # noqa: E501
            'skip_install': (bool,),  # noqa: E501
            'data_dir': (str,),  # noqa: E501
            'config': (str,),  # noqa: E501
            'ckpt': (str,),  # noqa: E501
            'ckpt_dir': (str,),  # noqa: E501
            'vae_dir': (str,),  # noqa: E501
            'gfpgan_dir': (str,),  # noqa: E501
            'gfpgan_model': (str,),  # noqa: E501
            'no_half': (bool,),  # noqa: E501
            'no_half_vae': (bool,),  # noqa: E501
            'no_progressbar_hiding': (bool,),  # noqa: E501
            'max_batch_count': (int,),  # noqa: E501
            'embeddings_dir': (str,),  # noqa: E501
            'textual_inversion_templates_dir': (str,),  # noqa: E501
            'hypernetwork_dir': (str,),  # noqa: E501
            'localizations_dir': (str,),  # noqa: E501
            'allow_code': (bool,),  # noqa: E501
            'medvram': (bool,),  # noqa: E501
            'lowvram': (bool,),  # noqa: E501
            'lowram': (bool,),  # noqa: E501
            'always_batch_cond_uncond': (bool,),  # noqa: E501
            'unload_gfpgan': (bool,),  # noqa: E501
            'precision': (str,),  # noqa: E501
            'upcast_sampling': (bool,),  # noqa: E501
            'share': (bool,),  # noqa: E501
            'ngrok': (str,),  # noqa: E501
            'ngrok_region': (str,),  # noqa: E501
            'enable_insecure_extension_access': (bool,),  # noqa: E501
            'codeformer_models_path': (str,),  # noqa: E501
            'gfpgan_models_path': (str,),  # noqa: E501
            'esrgan_models_path': (str,),  # noqa: E501
            'bsrgan_models_path': (str,),  # noqa: E501
            'realesrgan_models_path': (str,),  # noqa: E501
            'clip_models_path': (str,),  # noqa: E501
            'xformers': (bool,),  # noqa: E501
            'force_enable_xformers': (bool,),  # noqa: E501
            'xformers_flash_attention': (bool,),  # noqa: E501
            'deepdanbooru': (bool,),  # noqa: E501
            'opt_split_attention': (bool,),  # noqa: E501
            'opt_sub_quad_attention': (bool,),  # noqa: E501
            'sub_quad_q_chunk_size': (int,),  # noqa: E501
            'sub_quad_kv_chunk_size': (str,),  # noqa: E501
            'sub_quad_chunk_threshold': (str,),  # noqa: E501
            'opt_split_attention_invokeai': (bool,),  # noqa: E501
            'opt_split_attention_v1': (bool,),  # noqa: E501
            'opt_sdp_attention': (bool,),  # noqa: E501
            'opt_sdp_no_mem_attention': (bool,),  # noqa: E501
            'disable_opt_split_attention': (bool,),  # noqa: E501
            'disable_nan_check': (bool,),  # noqa: E501
            'use_cpu': ([bool, date, datetime, dict, float, int, list, str, none_type],),  # noqa: E501
            'listen': (bool,),  # noqa: E501
            'port': (str,),  # noqa: E501
            'show_negative_prompt': (bool,),  # noqa: E501
            'ui_config_file': (str,),  # noqa: E501
            'hide_ui_dir_config': (bool,),  # noqa: E501
            'freeze_settings': (bool,),  # noqa: E501
            'ui_settings_file': (str,),  # noqa: E501
            'gradio_debug': (bool,),  # noqa: E501
            'gradio_auth': (str,),  # noqa: E501
            'gradio_auth_path': (str,),  # noqa: E501
            'gradio_img2img_tool': (str,),  # noqa: E501
            'gradio_inpaint_tool': (str,),  # noqa: E501
            'opt_channelslast': (bool,),  # noqa: E501
            'styles_file': (str,),  # noqa: E501
            'autolaunch': (bool,),  # noqa: E501
            'theme': (str,),  # noqa: E501
            'use_textbox_seed': (bool,),  # noqa: E501
            'disable_console_progressbars': (bool,),  # noqa: E501
            'enable_console_prompts': (bool,),  # noqa: E501
            'vae_path': (str,),  # noqa: E501
            'disable_safe_unpickle': (bool,),  # noqa: E501
            'api': (bool,),  # noqa: E501
            'api_auth': (str,),  # noqa: E501
            'api_log': (bool,),  # noqa: E501
            'nowebui': (bool,),  # noqa: E501
            'ui_debug_mode': (bool,),  # noqa: E501
            'device_id': (str,),  # noqa: E501
            'administrator': (bool,),  # noqa: E501
            'cors_allow_origins': (str,),  # noqa: E501
            'cors_allow_origins_regex': (str,),  # noqa: E501
            'tls_keyfile': (str,),  # noqa: E501
            'tls_certfile': (str,),  # noqa: E501
            'server_name': (str,),  # noqa: E501
            'gradio_queue': (bool,),  # noqa: E501
            'no_gradio_queue': (bool,),  # noqa: E501
            'skip_version_check': (bool,),  # noqa: E501
            'no_hashing': (bool,),  # noqa: E501
            'no_download_sd_model': (bool,),  # noqa: E501
            'web_path': (str,),  # noqa: E501
            'lyco_dir': (str,),  # noqa: E501
            'addnet_max_model_count': (int,),  # noqa: E501
            'controlnet_dir': (str,),  # noqa: E501
            'controlnet_annotator_models_path': (str,),  # noqa: E501
            'no_half_controlnet': (str,),  # noqa: E501
            'civitai_endpoint': (str,),  # noqa: E501
            'civitai_link_endpoint': (str,),  # noqa: E501
            'deepdanbooru_projects_path': (str,),  # noqa: E501
            'ldsr_models_path': (str,),  # noqa: E501
            'lora_dir': (str,),  # noqa: E501
            'scunet_models_path': (str,),  # noqa: E501
            'swinir_models_path': (str,),  # noqa: E501
        }

    @cached_property
    def discriminator():
        return None


    attribute_map = {
        'f': 'f',  # noqa: E501
        'update_all_extensions': 'update_all_extensions',  # noqa: E501
        'skip_python_version_check': 'skip_python_version_check',  # noqa: E501
        'skip_torch_cuda_test': 'skip_torch_cuda_test',  # noqa: E501
        'reinstall_xformers': 'reinstall_xformers',  # noqa: E501
        'reinstall_torch': 'reinstall_torch',  # noqa: E501
        'update_check': 'update_check',  # noqa: E501
        'tests': 'tests',  # noqa: E501
        'no_tests': 'no_tests',  # noqa: E501
        'skip_install': 'skip_install',  # noqa: E501
        'data_dir': 'data_dir',  # noqa: E501
        'config': 'config',  # noqa: E501
        'ckpt': 'ckpt',  # noqa: E501
        'ckpt_dir': 'ckpt_dir',  # noqa: E501
        'vae_dir': 'vae_dir',  # noqa: E501
        'gfpgan_dir': 'gfpgan_dir',  # noqa: E501
        'gfpgan_model': 'gfpgan_model',  # noqa: E501
        'no_half': 'no_half',  # noqa: E501
        'no_half_vae': 'no_half_vae',  # noqa: E501
        'no_progressbar_hiding': 'no_progressbar_hiding',  # noqa: E501
        'max_batch_count': 'max_batch_count',  # noqa: E501
        'embeddings_dir': 'embeddings_dir',  # noqa: E501
        'textual_inversion_templates_dir': 'textual_inversion_templates_dir',  # noqa: E501
        'hypernetwork_dir': 'hypernetwork_dir',  # noqa: E501
        'localizations_dir': 'localizations_dir',  # noqa: E501
        'allow_code': 'allow_code',  # noqa: E501
        'medvram': 'medvram',  # noqa: E501
        'lowvram': 'lowvram',  # noqa: E501
        'lowram': 'lowram',  # noqa: E501
        'always_batch_cond_uncond': 'always_batch_cond_uncond',  # noqa: E501
        'unload_gfpgan': 'unload_gfpgan',  # noqa: E501
        'precision': 'precision',  # noqa: E501
        'upcast_sampling': 'upcast_sampling',  # noqa: E501
        'share': 'share',  # noqa: E501
        'ngrok': 'ngrok',  # noqa: E501
        'ngrok_region': 'ngrok_region',  # noqa: E501
        'enable_insecure_extension_access': 'enable_insecure_extension_access',  # noqa: E501
        'codeformer_models_path': 'codeformer_models_path',  # noqa: E501
        'gfpgan_models_path': 'gfpgan_models_path',  # noqa: E501
        'esrgan_models_path': 'esrgan_models_path',  # noqa: E501
        'bsrgan_models_path': 'bsrgan_models_path',  # noqa: E501
        'realesrgan_models_path': 'realesrgan_models_path',  # noqa: E501
        'clip_models_path': 'clip_models_path',  # noqa: E501
        'xformers': 'xformers',  # noqa: E501
        'force_enable_xformers': 'force_enable_xformers',  # noqa: E501
        'xformers_flash_attention': 'xformers_flash_attention',  # noqa: E501
        'deepdanbooru': 'deepdanbooru',  # noqa: E501
        'opt_split_attention': 'opt_split_attention',  # noqa: E501
        'opt_sub_quad_attention': 'opt_sub_quad_attention',  # noqa: E501
        'sub_quad_q_chunk_size': 'sub_quad_q_chunk_size',  # noqa: E501
        'sub_quad_kv_chunk_size': 'sub_quad_kv_chunk_size',  # noqa: E501
        'sub_quad_chunk_threshold': 'sub_quad_chunk_threshold',  # noqa: E501
        'opt_split_attention_invokeai': 'opt_split_attention_invokeai',  # noqa: E501
        'opt_split_attention_v1': 'opt_split_attention_v1',  # noqa: E501
        'opt_sdp_attention': 'opt_sdp_attention',  # noqa: E501
        'opt_sdp_no_mem_attention': 'opt_sdp_no_mem_attention',  # noqa: E501
        'disable_opt_split_attention': 'disable_opt_split_attention',  # noqa: E501
        'disable_nan_check': 'disable_nan_check',  # noqa: E501
        'use_cpu': 'use_cpu',  # noqa: E501
        'listen': 'listen',  # noqa: E501
        'port': 'port',  # noqa: E501
        'show_negative_prompt': 'show_negative_prompt',  # noqa: E501
        'ui_config_file': 'ui_config_file',  # noqa: E501
        'hide_ui_dir_config': 'hide_ui_dir_config',  # noqa: E501
        'freeze_settings': 'freeze_settings',  # noqa: E501
        'ui_settings_file': 'ui_settings_file',  # noqa: E501
        'gradio_debug': 'gradio_debug',  # noqa: E501
        'gradio_auth': 'gradio_auth',  # noqa: E501
        'gradio_auth_path': 'gradio_auth_path',  # noqa: E501
        'gradio_img2img_tool': 'gradio_img2img_tool',  # noqa: E501
        'gradio_inpaint_tool': 'gradio_inpaint_tool',  # noqa: E501
        'opt_channelslast': 'opt_channelslast',  # noqa: E501
        'styles_file': 'styles_file',  # noqa: E501
        'autolaunch': 'autolaunch',  # noqa: E501
        'theme': 'theme',  # noqa: E501
        'use_textbox_seed': 'use_textbox_seed',  # noqa: E501
        'disable_console_progressbars': 'disable_console_progressbars',  # noqa: E501
        'enable_console_prompts': 'enable_console_prompts',  # noqa: E501
        'vae_path': 'vae_path',  # noqa: E501
        'disable_safe_unpickle': 'disable_safe_unpickle',  # noqa: E501
        'api': 'api',  # noqa: E501
        'api_auth': 'api_auth',  # noqa: E501
        'api_log': 'api_log',  # noqa: E501
        'nowebui': 'nowebui',  # noqa: E501
        'ui_debug_mode': 'ui_debug_mode',  # noqa: E501
        'device_id': 'device_id',  # noqa: E501
        'administrator': 'administrator',  # noqa: E501
        'cors_allow_origins': 'cors_allow_origins',  # noqa: E501
        'cors_allow_origins_regex': 'cors_allow_origins_regex',  # noqa: E501
        'tls_keyfile': 'tls_keyfile',  # noqa: E501
        'tls_certfile': 'tls_certfile',  # noqa: E501
        'server_name': 'server_name',  # noqa: E501
        'gradio_queue': 'gradio_queue',  # noqa: E501
        'no_gradio_queue': 'no_gradio_queue',  # noqa: E501
        'skip_version_check': 'skip_version_check',  # noqa: E501
        'no_hashing': 'no_hashing',  # noqa: E501
        'no_download_sd_model': 'no_download_sd_model',  # noqa: E501
        'web_path': 'web_path',  # noqa: E501
        'lyco_dir': 'lyco_dir',  # noqa: E501
        'addnet_max_model_count': 'addnet_max_model_count',  # noqa: E501
        'controlnet_dir': 'controlnet_dir',  # noqa: E501
        'controlnet_annotator_models_path': 'controlnet_annotator_models_path',  # noqa: E501
        'no_half_controlnet': 'no_half_controlnet',  # noqa: E501
        'civitai_endpoint': 'civitai_endpoint',  # noqa: E501
        'civitai_link_endpoint': 'civitai_link_endpoint',  # noqa: E501
        'deepdanbooru_projects_path': 'deepdanbooru_projects_path',  # noqa: E501
        'ldsr_models_path': 'ldsr_models_path',  # noqa: E501
        'lora_dir': 'lora_dir',  # noqa: E501
        'scunet_models_path': 'scunet_models_path',  # noqa: E501
        'swinir_models_path': 'swinir_models_path',  # noqa: E501
    }

    read_only_vars = {
    }

    _composed_schemas = {}

    @classmethod
    @convert_js_args_to_python_args
    def _from_openapi_data(cls, *args, **kwargs):  # noqa: E501
        """Flags - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            f (bool): ==SUPPRESS==. [optional] if omitted the server will use the default value of False  # noqa: E501
            update_all_extensions (bool): launch.py argument: download updates for all extensions when starting the program. [optional] if omitted the server will use the default value of False  # noqa: E501
            skip_python_version_check (bool): launch.py argument: do not check python version. [optional] if omitted the server will use the default value of False  # noqa: E501
            skip_torch_cuda_test (bool): launch.py argument: do not check if CUDA is able to work properly. [optional] if omitted the server will use the default value of False  # noqa: E501
            reinstall_xformers (bool): launch.py argument: install the appropriate version of xformers even if you have some version already installed. [optional] if omitted the server will use the default value of False  # noqa: E501
            reinstall_torch (bool): launch.py argument: install the appropriate version of torch even if you have some version already installed. [optional] if omitted the server will use the default value of False  # noqa: E501
            update_check (bool): launch.py argument: chck for updates at startup. [optional] if omitted the server will use the default value of False  # noqa: E501
            tests (str): launch.py argument: run tests in the specified directory. [optional]  # noqa: E501
            no_tests (bool): launch.py argument: do not run tests even if --tests option is specified. [optional] if omitted the server will use the default value of False  # noqa: E501
            skip_install (bool): launch.py argument: skip installation of packages. [optional] if omitted the server will use the default value of False  # noqa: E501
            data_dir (str): base path where all user data is stored. [optional] if omitted the server will use the default value of "/sd"  # noqa: E501
            config (str): path to config which constructs model. [optional] if omitted the server will use the default value of "/sd/configs/v1-inference.yaml"  # noqa: E501
            ckpt (str): path to checkpoint of stable diffusion model; if specified, this checkpoint will be added to the list of checkpoints and loaded. [optional] if omitted the server will use the default value of "/sd/model.ckpt"  # noqa: E501
            ckpt_dir (str): Path to directory with stable diffusion checkpoints. [optional]  # noqa: E501
            vae_dir (str): Path to directory with VAE files. [optional]  # noqa: E501
            gfpgan_dir (str): GFPGAN directory. [optional] if omitted the server will use the default value of "./GFPGAN"  # noqa: E501
            gfpgan_model (str): GFPGAN model file name. [optional]  # noqa: E501
            no_half (bool): do not switch the model to 16-bit floats. [optional] if omitted the server will use the default value of False  # noqa: E501
            no_half_vae (bool): do not switch the VAE model to 16-bit floats. [optional] if omitted the server will use the default value of False  # noqa: E501
            no_progressbar_hiding (bool): do not hide progressbar in gradio UI (we hide it because it slows down ML if you have hardware acceleration in browser). [optional] if omitted the server will use the default value of False  # noqa: E501
            max_batch_count (int): maximum batch count value for the UI. [optional] if omitted the server will use the default value of 16  # noqa: E501
            embeddings_dir (str): embeddings directory for textual inversion (default: embeddings). [optional] if omitted the server will use the default value of "/sd/embeddings"  # noqa: E501
            textual_inversion_templates_dir (str): directory with textual inversion templates. [optional] if omitted the server will use the default value of "/sd/textual_inversion_templates"  # noqa: E501
            hypernetwork_dir (str): hypernetwork directory. [optional] if omitted the server will use the default value of "/sd/models/hypernetworks"  # noqa: E501
            localizations_dir (str): localizations directory. [optional] if omitted the server will use the default value of "/sd/localizations"  # noqa: E501
            allow_code (bool): allow custom script execution from webui. [optional] if omitted the server will use the default value of False  # noqa: E501
            medvram (bool): enable stable diffusion model optimizations for sacrificing a little speed for low VRM usage. [optional] if omitted the server will use the default value of False  # noqa: E501
            lowvram (bool): enable stable diffusion model optimizations for sacrificing a lot of speed for very low VRM usage. [optional] if omitted the server will use the default value of False  # noqa: E501
            lowram (bool): load stable diffusion checkpoint weights to VRAM instead of RAM. [optional] if omitted the server will use the default value of False  # noqa: E501
            always_batch_cond_uncond (bool): disables cond/uncond batching that is enabled to save memory with --medvram or --lowvram. [optional] if omitted the server will use the default value of False  # noqa: E501
            unload_gfpgan (bool): does not do anything.. [optional] if omitted the server will use the default value of False  # noqa: E501
            precision (str): evaluate at this precision. [optional] if omitted the server will use the default value of "autocast"  # noqa: E501
            upcast_sampling (bool): upcast sampling. No effect with --no-half. Usually produces similar results to --no-half with better performance while using less memory.. [optional] if omitted the server will use the default value of False  # noqa: E501
            share (bool): use share=True for gradio and make the UI accessible through their site. [optional] if omitted the server will use the default value of False  # noqa: E501
            ngrok (str): ngrok authtoken, alternative to gradio --share. [optional]  # noqa: E501
            ngrok_region (str): The region in which ngrok should start.. [optional] if omitted the server will use the default value of "us"  # noqa: E501
            enable_insecure_extension_access (bool): enable extensions tab regardless of other options. [optional] if omitted the server will use the default value of False  # noqa: E501
            codeformer_models_path (str): Path to directory with codeformer model file(s).. [optional] if omitted the server will use the default value of "/sd/models/Codeformer"  # noqa: E501
            gfpgan_models_path (str): Path to directory with GFPGAN model file(s).. [optional] if omitted the server will use the default value of "/sd/models/GFPGAN"  # noqa: E501
            esrgan_models_path (str): Path to directory with ESRGAN model file(s).. [optional] if omitted the server will use the default value of "/sd/models/ESRGAN"  # noqa: E501
            bsrgan_models_path (str): Path to directory with BSRGAN model file(s).. [optional] if omitted the server will use the default value of "/sd/models/BSRGAN"  # noqa: E501
            realesrgan_models_path (str): Path to directory with RealESRGAN model file(s).. [optional] if omitted the server will use the default value of "/sd/models/RealESRGAN"  # noqa: E501
            clip_models_path (str): Path to directory with CLIP model file(s).. [optional]  # noqa: E501
            xformers (bool): enable xformers for cross attention layers. [optional] if omitted the server will use the default value of False  # noqa: E501
            force_enable_xformers (bool): enable xformers for cross attention layers regardless of whether the checking code thinks you can run it; do not make bug reports if this fails to work. [optional] if omitted the server will use the default value of False  # noqa: E501
            xformers_flash_attention (bool): enable xformers with Flash Attention to improve reproducibility (supported for SD2.x or variant only). [optional] if omitted the server will use the default value of False  # noqa: E501
            deepdanbooru (bool): does not do anything. [optional] if omitted the server will use the default value of False  # noqa: E501
            opt_split_attention (bool): force-enables Doggettx's cross-attention layer optimization. By default, it's on for torch cuda.. [optional] if omitted the server will use the default value of False  # noqa: E501
            opt_sub_quad_attention (bool): enable memory efficient sub-quadratic cross-attention layer optimization. [optional] if omitted the server will use the default value of False  # noqa: E501
            sub_quad_q_chunk_size (int): query chunk size for the sub-quadratic cross-attention layer optimization to use. [optional] if omitted the server will use the default value of 1024  # noqa: E501
            sub_quad_kv_chunk_size (str): kv chunk size for the sub-quadratic cross-attention layer optimization to use. [optional]  # noqa: E501
            sub_quad_chunk_threshold (str): the percentage of VRAM threshold for the sub-quadratic cross-attention layer optimization to use chunking. [optional]  # noqa: E501
            opt_split_attention_invokeai (bool): force-enables InvokeAI's cross-attention layer optimization. By default, it's on when cuda is unavailable.. [optional] if omitted the server will use the default value of False  # noqa: E501
            opt_split_attention_v1 (bool): enable older version of split attention optimization that does not consume all the VRAM it can find. [optional] if omitted the server will use the default value of False  # noqa: E501
            opt_sdp_attention (bool): enable scaled dot product cross-attention layer optimization; requires PyTorch 2.*. [optional] if omitted the server will use the default value of False  # noqa: E501
            opt_sdp_no_mem_attention (bool): enable scaled dot product cross-attention layer optimization without memory efficient attention, makes image generation deterministic; requires PyTorch 2.*. [optional] if omitted the server will use the default value of False  # noqa: E501
            disable_opt_split_attention (bool): force-disables cross-attention layer optimization. [optional] if omitted the server will use the default value of False  # noqa: E501
            disable_nan_check (bool): do not check if produced images/latent spaces have nans; useful for running without a checkpoint in CI. [optional] if omitted the server will use the default value of False  # noqa: E501
            use_cpu ([bool, date, datetime, dict, float, int, list, str, none_type]): use CPU as torch device for specified modules. [optional] if omitted the server will use the default value of []  # noqa: E501
            listen (bool): launch gradio with 0.0.0.0 as server name, allowing to respond to network requests. [optional] if omitted the server will use the default value of False  # noqa: E501
            port (str): launch gradio with given server port, you need root/admin rights for ports < 1024, defaults to 7860 if available. [optional]  # noqa: E501
            show_negative_prompt (bool): does not do anything. [optional] if omitted the server will use the default value of False  # noqa: E501
            ui_config_file (str): filename to use for ui configuration. [optional] if omitted the server will use the default value of "/sd/ui-config.json"  # noqa: E501
            hide_ui_dir_config (bool): hide directory configuration from webui. [optional] if omitted the server will use the default value of False  # noqa: E501
            freeze_settings (bool): disable editing settings. [optional] if omitted the server will use the default value of False  # noqa: E501
            ui_settings_file (str): filename to use for ui settings. [optional] if omitted the server will use the default value of "/sd/config.json"  # noqa: E501
            gradio_debug (bool): launch gradio with --debug option. [optional] if omitted the server will use the default value of False  # noqa: E501
            gradio_auth (str): set gradio authentication like \"username:password\"; or comma-delimit multiple like \"u1:p1,u2:p2,u3:p3\". [optional]  # noqa: E501
            gradio_auth_path (str): set gradio authentication file path ex. \"/path/to/auth/file\" same auth format as --gradio-auth. [optional]  # noqa: E501
            gradio_img2img_tool (str): does not do anything. [optional]  # noqa: E501
            gradio_inpaint_tool (str): does not do anything. [optional]  # noqa: E501
            opt_channelslast (bool): change memory type for stable diffusion to channels last. [optional] if omitted the server will use the default value of False  # noqa: E501
            styles_file (str): filename to use for styles. [optional] if omitted the server will use the default value of "/sd/styles.csv"  # noqa: E501
            autolaunch (bool): open the webui URL in the system's default browser upon launch. [optional] if omitted the server will use the default value of False  # noqa: E501
            theme (str): launches the UI with light or dark theme. [optional]  # noqa: E501
            use_textbox_seed (bool): use textbox for seeds in UI (no up/down, but possible to input long seeds). [optional] if omitted the server will use the default value of False  # noqa: E501
            disable_console_progressbars (bool): do not output progressbars to console. [optional] if omitted the server will use the default value of False  # noqa: E501
            enable_console_prompts (bool): print prompts to console when generating with txt2img and img2img. [optional] if omitted the server will use the default value of False  # noqa: E501
            vae_path (str): Checkpoint to use as VAE; setting this argument disables all settings related to VAE. [optional]  # noqa: E501
            disable_safe_unpickle (bool): disable checking pytorch models for malicious code. [optional] if omitted the server will use the default value of False  # noqa: E501
            api (bool): use api=True to launch the API together with the webui (use --nowebui instead for only the API). [optional] if omitted the server will use the default value of False  # noqa: E501
            api_auth (str): Set authentication for API like \"username:password\"; or comma-delimit multiple like \"u1:p1,u2:p2,u3:p3\". [optional]  # noqa: E501
            api_log (bool): use api-log=True to enable logging of all API requests. [optional] if omitted the server will use the default value of False  # noqa: E501
            nowebui (bool): use api=True to launch the API instead of the webui. [optional] if omitted the server will use the default value of False  # noqa: E501
            ui_debug_mode (bool): Don't load model to quickly launch UI. [optional] if omitted the server will use the default value of False  # noqa: E501
            device_id (str): Select the default CUDA device to use (export CUDA_VISIBLE_DEVICES=0,1,etc might be needed before). [optional]  # noqa: E501
            administrator (bool): Administrator rights. [optional] if omitted the server will use the default value of False  # noqa: E501
            cors_allow_origins (str): Allowed CORS origin(s) in the form of a comma-separated list (no spaces). [optional]  # noqa: E501
            cors_allow_origins_regex (str): Allowed CORS origin(s) in the form of a single regular expression. [optional]  # noqa: E501
            tls_keyfile (str): Partially enables TLS, requires --tls-certfile to fully function. [optional]  # noqa: E501
            tls_certfile (str): Partially enables TLS, requires --tls-keyfile to fully function. [optional]  # noqa: E501
            server_name (str): Sets hostname of server. [optional]  # noqa: E501
            gradio_queue (bool): does not do anything. [optional] if omitted the server will use the default value of True  # noqa: E501
            no_gradio_queue (bool): Disables gradio queue; causes the webpage to use http requests instead of websockets; was the defaul in earlier versions. [optional] if omitted the server will use the default value of False  # noqa: E501
            skip_version_check (bool): Do not check versions of torch and xformers. [optional] if omitted the server will use the default value of False  # noqa: E501
            no_hashing (bool): disable sha256 hashing of checkpoints to help loading performance. [optional] if omitted the server will use the default value of False  # noqa: E501
            no_download_sd_model (bool): don't download SD1.5 model even if no model is found in --ckpt-dir. [optional] if omitted the server will use the default value of False  # noqa: E501
            web_path (str): evaluate at this precision. [optional] if omitted the server will use the default value of ""  # noqa: E501
            lyco_dir (str): Path to directory with LyCORIS networks.. [optional] if omitted the server will use the default value of "/sd/models/LyCORIS"  # noqa: E501
            addnet_max_model_count (int): The maximum number of additional network model can be used.. [optional] if omitted the server will use the default value of 5  # noqa: E501
            controlnet_dir (str): Path to directory with ControlNet models. [optional]  # noqa: E501
            controlnet_annotator_models_path (str): Path to directory with annotator model directories. [optional]  # noqa: E501
            no_half_controlnet (str): do not switch the ControlNet models to 16-bit floats (only needed without --no-half). [optional]  # noqa: E501
            civitai_endpoint (str): Endpoint for interacting with a Civitai instance. [optional] if omitted the server will use the default value of "https://civitai.com/api/v1"  # noqa: E501
            civitai_link_endpoint (str): Endpoint for interacting with a Civitai Link server. [optional] if omitted the server will use the default value of "https://link.civitai.com/api/socketio"  # noqa: E501
            deepdanbooru_projects_path (str): Path to directory with DeepDanbooru project(s).. [optional] if omitted the server will use the default value of "/sd/models/deepdanbooru"  # noqa: E501
            ldsr_models_path (str): Path to directory with LDSR model file(s).. [optional] if omitted the server will use the default value of "/sd/models/LDSR"  # noqa: E501
            lora_dir (str): Path to directory with Lora networks.. [optional] if omitted the server will use the default value of "/sd/models/Lora"  # noqa: E501
            scunet_models_path (str): Path to directory with ScuNET model file(s).. [optional] if omitted the server will use the default value of "/sd/models/ScuNET"  # noqa: E501
            swinir_models_path (str): Path to directory with SwinIR model file(s).. [optional] if omitted the server will use the default value of "/sd/models/SwinIR"  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        self = super(OpenApiModel, cls).__new__(cls)

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
        return self

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
    ])

    @convert_js_args_to_python_args
    def __init__(self, *args, **kwargs):  # noqa: E501
        """Flags - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            f (bool): ==SUPPRESS==. [optional] if omitted the server will use the default value of False  # noqa: E501
            update_all_extensions (bool): launch.py argument: download updates for all extensions when starting the program. [optional] if omitted the server will use the default value of False  # noqa: E501
            skip_python_version_check (bool): launch.py argument: do not check python version. [optional] if omitted the server will use the default value of False  # noqa: E501
            skip_torch_cuda_test (bool): launch.py argument: do not check if CUDA is able to work properly. [optional] if omitted the server will use the default value of False  # noqa: E501
            reinstall_xformers (bool): launch.py argument: install the appropriate version of xformers even if you have some version already installed. [optional] if omitted the server will use the default value of False  # noqa: E501
            reinstall_torch (bool): launch.py argument: install the appropriate version of torch even if you have some version already installed. [optional] if omitted the server will use the default value of False  # noqa: E501
            update_check (bool): launch.py argument: chck for updates at startup. [optional] if omitted the server will use the default value of False  # noqa: E501
            tests (str): launch.py argument: run tests in the specified directory. [optional]  # noqa: E501
            no_tests (bool): launch.py argument: do not run tests even if --tests option is specified. [optional] if omitted the server will use the default value of False  # noqa: E501
            skip_install (bool): launch.py argument: skip installation of packages. [optional] if omitted the server will use the default value of False  # noqa: E501
            data_dir (str): base path where all user data is stored. [optional] if omitted the server will use the default value of "/sd"  # noqa: E501
            config (str): path to config which constructs model. [optional] if omitted the server will use the default value of "/sd/configs/v1-inference.yaml"  # noqa: E501
            ckpt (str): path to checkpoint of stable diffusion model; if specified, this checkpoint will be added to the list of checkpoints and loaded. [optional] if omitted the server will use the default value of "/sd/model.ckpt"  # noqa: E501
            ckpt_dir (str): Path to directory with stable diffusion checkpoints. [optional]  # noqa: E501
            vae_dir (str): Path to directory with VAE files. [optional]  # noqa: E501
            gfpgan_dir (str): GFPGAN directory. [optional] if omitted the server will use the default value of "./GFPGAN"  # noqa: E501
            gfpgan_model (str): GFPGAN model file name. [optional]  # noqa: E501
            no_half (bool): do not switch the model to 16-bit floats. [optional] if omitted the server will use the default value of False  # noqa: E501
            no_half_vae (bool): do not switch the VAE model to 16-bit floats. [optional] if omitted the server will use the default value of False  # noqa: E501
            no_progressbar_hiding (bool): do not hide progressbar in gradio UI (we hide it because it slows down ML if you have hardware acceleration in browser). [optional] if omitted the server will use the default value of False  # noqa: E501
            max_batch_count (int): maximum batch count value for the UI. [optional] if omitted the server will use the default value of 16  # noqa: E501
            embeddings_dir (str): embeddings directory for textual inversion (default: embeddings). [optional] if omitted the server will use the default value of "/sd/embeddings"  # noqa: E501
            textual_inversion_templates_dir (str): directory with textual inversion templates. [optional] if omitted the server will use the default value of "/sd/textual_inversion_templates"  # noqa: E501
            hypernetwork_dir (str): hypernetwork directory. [optional] if omitted the server will use the default value of "/sd/models/hypernetworks"  # noqa: E501
            localizations_dir (str): localizations directory. [optional] if omitted the server will use the default value of "/sd/localizations"  # noqa: E501
            allow_code (bool): allow custom script execution from webui. [optional] if omitted the server will use the default value of False  # noqa: E501
            medvram (bool): enable stable diffusion model optimizations for sacrificing a little speed for low VRM usage. [optional] if omitted the server will use the default value of False  # noqa: E501
            lowvram (bool): enable stable diffusion model optimizations for sacrificing a lot of speed for very low VRM usage. [optional] if omitted the server will use the default value of False  # noqa: E501
            lowram (bool): load stable diffusion checkpoint weights to VRAM instead of RAM. [optional] if omitted the server will use the default value of False  # noqa: E501
            always_batch_cond_uncond (bool): disables cond/uncond batching that is enabled to save memory with --medvram or --lowvram. [optional] if omitted the server will use the default value of False  # noqa: E501
            unload_gfpgan (bool): does not do anything.. [optional] if omitted the server will use the default value of False  # noqa: E501
            precision (str): evaluate at this precision. [optional] if omitted the server will use the default value of "autocast"  # noqa: E501
            upcast_sampling (bool): upcast sampling. No effect with --no-half. Usually produces similar results to --no-half with better performance while using less memory.. [optional] if omitted the server will use the default value of False  # noqa: E501
            share (bool): use share=True for gradio and make the UI accessible through their site. [optional] if omitted the server will use the default value of False  # noqa: E501
            ngrok (str): ngrok authtoken, alternative to gradio --share. [optional]  # noqa: E501
            ngrok_region (str): The region in which ngrok should start.. [optional] if omitted the server will use the default value of "us"  # noqa: E501
            enable_insecure_extension_access (bool): enable extensions tab regardless of other options. [optional] if omitted the server will use the default value of False  # noqa: E501
            codeformer_models_path (str): Path to directory with codeformer model file(s).. [optional] if omitted the server will use the default value of "/sd/models/Codeformer"  # noqa: E501
            gfpgan_models_path (str): Path to directory with GFPGAN model file(s).. [optional] if omitted the server will use the default value of "/sd/models/GFPGAN"  # noqa: E501
            esrgan_models_path (str): Path to directory with ESRGAN model file(s).. [optional] if omitted the server will use the default value of "/sd/models/ESRGAN"  # noqa: E501
            bsrgan_models_path (str): Path to directory with BSRGAN model file(s).. [optional] if omitted the server will use the default value of "/sd/models/BSRGAN"  # noqa: E501
            realesrgan_models_path (str): Path to directory with RealESRGAN model file(s).. [optional] if omitted the server will use the default value of "/sd/models/RealESRGAN"  # noqa: E501
            clip_models_path (str): Path to directory with CLIP model file(s).. [optional]  # noqa: E501
            xformers (bool): enable xformers for cross attention layers. [optional] if omitted the server will use the default value of False  # noqa: E501
            force_enable_xformers (bool): enable xformers for cross attention layers regardless of whether the checking code thinks you can run it; do not make bug reports if this fails to work. [optional] if omitted the server will use the default value of False  # noqa: E501
            xformers_flash_attention (bool): enable xformers with Flash Attention to improve reproducibility (supported for SD2.x or variant only). [optional] if omitted the server will use the default value of False  # noqa: E501
            deepdanbooru (bool): does not do anything. [optional] if omitted the server will use the default value of False  # noqa: E501
            opt_split_attention (bool): force-enables Doggettx's cross-attention layer optimization. By default, it's on for torch cuda.. [optional] if omitted the server will use the default value of False  # noqa: E501
            opt_sub_quad_attention (bool): enable memory efficient sub-quadratic cross-attention layer optimization. [optional] if omitted the server will use the default value of False  # noqa: E501
            sub_quad_q_chunk_size (int): query chunk size for the sub-quadratic cross-attention layer optimization to use. [optional] if omitted the server will use the default value of 1024  # noqa: E501
            sub_quad_kv_chunk_size (str): kv chunk size for the sub-quadratic cross-attention layer optimization to use. [optional]  # noqa: E501
            sub_quad_chunk_threshold (str): the percentage of VRAM threshold for the sub-quadratic cross-attention layer optimization to use chunking. [optional]  # noqa: E501
            opt_split_attention_invokeai (bool): force-enables InvokeAI's cross-attention layer optimization. By default, it's on when cuda is unavailable.. [optional] if omitted the server will use the default value of False  # noqa: E501
            opt_split_attention_v1 (bool): enable older version of split attention optimization that does not consume all the VRAM it can find. [optional] if omitted the server will use the default value of False  # noqa: E501
            opt_sdp_attention (bool): enable scaled dot product cross-attention layer optimization; requires PyTorch 2.*. [optional] if omitted the server will use the default value of False  # noqa: E501
            opt_sdp_no_mem_attention (bool): enable scaled dot product cross-attention layer optimization without memory efficient attention, makes image generation deterministic; requires PyTorch 2.*. [optional] if omitted the server will use the default value of False  # noqa: E501
            disable_opt_split_attention (bool): force-disables cross-attention layer optimization. [optional] if omitted the server will use the default value of False  # noqa: E501
            disable_nan_check (bool): do not check if produced images/latent spaces have nans; useful for running without a checkpoint in CI. [optional] if omitted the server will use the default value of False  # noqa: E501
            use_cpu ([bool, date, datetime, dict, float, int, list, str, none_type]): use CPU as torch device for specified modules. [optional] if omitted the server will use the default value of []  # noqa: E501
            listen (bool): launch gradio with 0.0.0.0 as server name, allowing to respond to network requests. [optional] if omitted the server will use the default value of False  # noqa: E501
            port (str): launch gradio with given server port, you need root/admin rights for ports < 1024, defaults to 7860 if available. [optional]  # noqa: E501
            show_negative_prompt (bool): does not do anything. [optional] if omitted the server will use the default value of False  # noqa: E501
            ui_config_file (str): filename to use for ui configuration. [optional] if omitted the server will use the default value of "/sd/ui-config.json"  # noqa: E501
            hide_ui_dir_config (bool): hide directory configuration from webui. [optional] if omitted the server will use the default value of False  # noqa: E501
            freeze_settings (bool): disable editing settings. [optional] if omitted the server will use the default value of False  # noqa: E501
            ui_settings_file (str): filename to use for ui settings. [optional] if omitted the server will use the default value of "/sd/config.json"  # noqa: E501
            gradio_debug (bool): launch gradio with --debug option. [optional] if omitted the server will use the default value of False  # noqa: E501
            gradio_auth (str): set gradio authentication like \"username:password\"; or comma-delimit multiple like \"u1:p1,u2:p2,u3:p3\". [optional]  # noqa: E501
            gradio_auth_path (str): set gradio authentication file path ex. \"/path/to/auth/file\" same auth format as --gradio-auth. [optional]  # noqa: E501
            gradio_img2img_tool (str): does not do anything. [optional]  # noqa: E501
            gradio_inpaint_tool (str): does not do anything. [optional]  # noqa: E501
            opt_channelslast (bool): change memory type for stable diffusion to channels last. [optional] if omitted the server will use the default value of False  # noqa: E501
            styles_file (str): filename to use for styles. [optional] if omitted the server will use the default value of "/sd/styles.csv"  # noqa: E501
            autolaunch (bool): open the webui URL in the system's default browser upon launch. [optional] if omitted the server will use the default value of False  # noqa: E501
            theme (str): launches the UI with light or dark theme. [optional]  # noqa: E501
            use_textbox_seed (bool): use textbox for seeds in UI (no up/down, but possible to input long seeds). [optional] if omitted the server will use the default value of False  # noqa: E501
            disable_console_progressbars (bool): do not output progressbars to console. [optional] if omitted the server will use the default value of False  # noqa: E501
            enable_console_prompts (bool): print prompts to console when generating with txt2img and img2img. [optional] if omitted the server will use the default value of False  # noqa: E501
            vae_path (str): Checkpoint to use as VAE; setting this argument disables all settings related to VAE. [optional]  # noqa: E501
            disable_safe_unpickle (bool): disable checking pytorch models for malicious code. [optional] if omitted the server will use the default value of False  # noqa: E501
            api (bool): use api=True to launch the API together with the webui (use --nowebui instead for only the API). [optional] if omitted the server will use the default value of False  # noqa: E501
            api_auth (str): Set authentication for API like \"username:password\"; or comma-delimit multiple like \"u1:p1,u2:p2,u3:p3\". [optional]  # noqa: E501
            api_log (bool): use api-log=True to enable logging of all API requests. [optional] if omitted the server will use the default value of False  # noqa: E501
            nowebui (bool): use api=True to launch the API instead of the webui. [optional] if omitted the server will use the default value of False  # noqa: E501
            ui_debug_mode (bool): Don't load model to quickly launch UI. [optional] if omitted the server will use the default value of False  # noqa: E501
            device_id (str): Select the default CUDA device to use (export CUDA_VISIBLE_DEVICES=0,1,etc might be needed before). [optional]  # noqa: E501
            administrator (bool): Administrator rights. [optional] if omitted the server will use the default value of False  # noqa: E501
            cors_allow_origins (str): Allowed CORS origin(s) in the form of a comma-separated list (no spaces). [optional]  # noqa: E501
            cors_allow_origins_regex (str): Allowed CORS origin(s) in the form of a single regular expression. [optional]  # noqa: E501
            tls_keyfile (str): Partially enables TLS, requires --tls-certfile to fully function. [optional]  # noqa: E501
            tls_certfile (str): Partially enables TLS, requires --tls-keyfile to fully function. [optional]  # noqa: E501
            server_name (str): Sets hostname of server. [optional]  # noqa: E501
            gradio_queue (bool): does not do anything. [optional] if omitted the server will use the default value of True  # noqa: E501
            no_gradio_queue (bool): Disables gradio queue; causes the webpage to use http requests instead of websockets; was the defaul in earlier versions. [optional] if omitted the server will use the default value of False  # noqa: E501
            skip_version_check (bool): Do not check versions of torch and xformers. [optional] if omitted the server will use the default value of False  # noqa: E501
            no_hashing (bool): disable sha256 hashing of checkpoints to help loading performance. [optional] if omitted the server will use the default value of False  # noqa: E501
            no_download_sd_model (bool): don't download SD1.5 model even if no model is found in --ckpt-dir. [optional] if omitted the server will use the default value of False  # noqa: E501
            web_path (str): evaluate at this precision. [optional] if omitted the server will use the default value of ""  # noqa: E501
            lyco_dir (str): Path to directory with LyCORIS networks.. [optional] if omitted the server will use the default value of "/sd/models/LyCORIS"  # noqa: E501
            addnet_max_model_count (int): The maximum number of additional network model can be used.. [optional] if omitted the server will use the default value of 5  # noqa: E501
            controlnet_dir (str): Path to directory with ControlNet models. [optional]  # noqa: E501
            controlnet_annotator_models_path (str): Path to directory with annotator model directories. [optional]  # noqa: E501
            no_half_controlnet (str): do not switch the ControlNet models to 16-bit floats (only needed without --no-half). [optional]  # noqa: E501
            civitai_endpoint (str): Endpoint for interacting with a Civitai instance. [optional] if omitted the server will use the default value of "https://civitai.com/api/v1"  # noqa: E501
            civitai_link_endpoint (str): Endpoint for interacting with a Civitai Link server. [optional] if omitted the server will use the default value of "https://link.civitai.com/api/socketio"  # noqa: E501
            deepdanbooru_projects_path (str): Path to directory with DeepDanbooru project(s).. [optional] if omitted the server will use the default value of "/sd/models/deepdanbooru"  # noqa: E501
            ldsr_models_path (str): Path to directory with LDSR model file(s).. [optional] if omitted the server will use the default value of "/sd/models/LDSR"  # noqa: E501
            lora_dir (str): Path to directory with Lora networks.. [optional] if omitted the server will use the default value of "/sd/models/Lora"  # noqa: E501
            scunet_models_path (str): Path to directory with ScuNET model file(s).. [optional] if omitted the server will use the default value of "/sd/models/ScuNET"  # noqa: E501
            swinir_models_path (str): Path to directory with SwinIR model file(s).. [optional] if omitted the server will use the default value of "/sd/models/SwinIR"  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
            if var_name in self.read_only_vars:
                raise ApiAttributeError(f"`{var_name}` is a read-only attribute. Use `from_openapi_data` to instantiate "
                                     f"class with read only attributes.")
